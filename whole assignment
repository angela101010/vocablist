import java.util.ArrayList;
public class VocabList {
    private ArrayList<String> words;
    private ArrayList<String> definitions;

    public VocabList() {
        words = new ArrayList<String>();
        definitions = new ArrayList<String>();
    }

    public VocabList(String[] a, String[] b) {
        words = new ArrayList<String>();
        definitions = new ArrayList<String>();

        for(int i = 0; i<a.length; i++) {
            this.add(a[i], b[i]);
        }

    }
    
    @SuppressWarnings("unchecked")
    public VocabList(VocabList a) {
        this.words = (ArrayList<String>) a.words.clone();
        this.definitions = (ArrayList<String>) a.definitions.clone();
    }
    //accessor methods
    public int size() {
        int count = 0;
        for(int i = 0; i < words.size(); i++){
            count++;
        }
        return count;
    }
    
    public boolean contains(String word) {
        for(int i = 0; i<words.size(); i++) {
            if(words.get(i).toLowerCase()==word.toLowerCase()) {
                return true;
            }
        }
        return false;
    }
    
    public String getDefinition(String word) {
        for(int i = 0; i<words.size(); i++) {
            if(words.get(i).toLowerCase()==word.toLowerCase()) {
                return definitions.get(i);
            } else {
                return "Undefined";
            }
        }
        return "Undefined";
    }
    
    public String getWord(String definition) {
        for(int i=0; i<words.size(); i++) {
            if(definitions.get(i).toLowerCase()==definition.toLowerCase()) {
                return words.get(i);
            }else {
                return "No such word";
            }
        }
        return "No such word";
    }
    
    public String getRandomWord() {
        int x = (int) (Math.random()*words.size());
        return words.get(x);
    }
    
    public String getRandomDefinition() {
        int y = (int) (Math.random()*words.size());
        return definitions.get(y);
    }
    
    public String toString() {
        String a = "";
        for(int i=0; i<words.size(); i++) {
            a += words.get(i) + ":" + definitions.get(i) + "\n\n";
        }
        if(a.length() == 0) {
            a+="empty";
        }
        return a;
    }
    
   // mutator mehtods
    public void add(String word, String definition) {
        if (words.size()==0) {
            words.add(word);
            definitions.add(definition);
        }
        for(int i = 0; i<words.size(); i++){
            if(word.compareTo(words.get(i))<0){
                words.add(i, word);
                definitions.add(i, definition);
                break;
            }
        }
    }
    
    public void remove (String word) {
        boolean exists = false;
        for(int i=0; i<words.size(); i++) {
            if(word.equals(words.get(i))) {
                exists = true;
                words.remove(i);
                definitions.remove(i);
            }
        }
        
        if (exists == false) {
            System.out.println("Word not found");
        }
    }
    
    
}
